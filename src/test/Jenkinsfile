def readYaml(String readYamlFilePath) {
    """
    Function to read key-value pairs from a YAML file and return them as a map.
    """
    if (fileExists(readYamlFilePath)) {
        return readYaml(file: readYamlFilePath)
    } else {
        error "File $readYamlFilePath not found in the workspace!"
    }
}

def readVarsFromYaml(String readYamlFilePath) {
    """
    Function to read key-value variables (String) from a YAML file
    and return them as a map.
    """
    def yamlFile = readYaml(readYamlFilePath)
    def variablesMap = [:] // Initialize an empty map

    yamlFile.each { key, value ->
        variablesMap[key] = value // Store each key-value pair in the map
        // echo "Se crea variable $key = $value"
    }

    return variablesMap // Return the map containing all variables
}

pipeline {

    agent any

    environment {
        // BRANCHES = "^stage_(dev|qas|pro)_env_(dev|qas|pro)$"
        BRANCHES = "main"
    }
 
    stages {
        stage ("Initialize Pipeline") {
            when { branch pattern: BRANCHES, comparator: "REGEXP"; beforeAgent true }
            

            steps {
               script { 
                    def variables = readVarsFromYaml("src/test/environments/variables.yaml")
                    
                    variables.each { localFolder, gcsPath ->
                        echo "Syncing $localFolder to $gcsPath"
                        // sh "gcloud storage rsync $localFolder $gcsPath --exclude='jenkins'"
                    }
                }
                
            }
        }
    }
}  